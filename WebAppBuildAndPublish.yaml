parameters:
  - name: buildConfiguration
    default: 'Release'
  - name: buildPlatform
    default: 'Any CPU'
  - name: projectName
    default: ' '
  - name: stage
    default: 'BuildWeb'
  - name: vmImage
    default: 'windows-latest'

jobs:
- job: ${{ parameters.stage }}
  pool: 
    vmImage: ${{ parameters.vmImage }}
  steps:
    - task: NuGetToolInstaller@1

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(Build.ArtifactStagingDirectory)

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    
    - task: VSBuild@1
      displayName: CodeAnalysis
      inputs:
        solution: '${{parameters.projectName}}'
        msbuildArgs: '/p:RunCodeAnalysis=true'
        platform: '${{parameters.buildPlatform}}'
        configuration: '${{parameters.buildConfiguration}}'

    - task: VSBuild@1
      displayName: CodeMetrics
      inputs:
        solution: '${{parameters.projectName}}'
        msbuildArgs: '/t:Metrics /p:MetricsOutputFile=$(Build.ArtifactStagingDirectory)/${{parameters.projectName}}.Metrics.xml'
        platform: '${{parameters.buildPlatform}}'
        configuration: '${{parameters.buildConfiguration}}'

    - task: VSBuild@1
      inputs:
        solution: '${{parameters.projectName}}'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '${{parameters.buildPlatform}}'
        configuration: '${{parameters.buildConfiguration}}'

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*Tests*.dll
          !**\*TestAdapter.dll
          !**\obj\**
          !**\bin\**\ref\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        codeCoverageEnabled: true
        testRunTitle: 'Run Unit Tests'
        platform: '${{parameters.buildPlatform}}'
        configuration: '${{parameters.buildConfiguration}}'
        resultsFolder: '$(build.ArtifactStagingDirectory)\Test\Results'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '**\Test\Results\**'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'web application drop'
      condition: succeeded()